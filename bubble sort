import pyglet
from pyglet import shapes
from random import sample
 
def bubble_sort_animation_frames(arr):
    frames = []
    n = len(arr)
 
    for i in range(n):
        for j in range(0, n-i-1):
            frames.append(arr.copy())
 
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
 
    frames.append(arr.copy())
 
    return frames
 
window = pyglet.window.Window(width=1500, height=700)
 
array_to_sort = sample(range(1, 101), 60)
 
animation_frames = bubble_sort_animation_frames(array_to_sort.copy())
 
batch = pyglet.graphics.Batch()
 
compared_color = (200, 162, 200) 
normal_color = (128, 128, 0) 
 
@window.event
def on_draw():
    window.clear()
 
    for i, value in enumerate(array_to_sort):
        color = compared_color if animation_frames and animation_frames[0][i] == value else normal_color
        shapes.Rectangle(i * 10 + 30, 30, 10, value * 3, color=color, batch=batch).draw()
 
def update(dt):
    global array_to_sort, animation_frames
 
    if animation_frames:
        array_to_sort = animation_frames.pop(0)
    else:
        pyglet.app.exit()
 
pyglet.clock.schedule_interval(update, 0.2)  
 
pyglet.app.run()
